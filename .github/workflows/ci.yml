name: Run CI

# Run this workflow every time a new commit pushed to your repository
on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.10', '3.11', '3.12', '3.13']
        django: ['4.2', '5.2']
        mozilla_django_oidc: ['4.0']
        setup_config_enabled: ['no', 'yes']
        exclude:
          - python: '3.13'
            django: '4.2'

    name: "Run the test suite (Python ${{ matrix.python }}, Django ${{ matrix.django }},
      mozilla-django-oidc ${{ matrix.mozilla_django_oidc }}, Setup Config: ${{ matrix.setup_config_enabled }}))"

    services:
      postgres:
        image: docker.io/library/postgres:17
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: pip install tox tox-gh-actions

      - name: Run tests
        run: |
          tox -- ${{ matrix.setup_config_enabled != 'yes' && '--ignore tests/setupconfig' || '' }}
        env:
          PYTHON_VERSION: ${{ matrix.python }}
          DJANGO: ${{ matrix.django }}
          MOZILLA_DJANGO_OIDC: ${{ matrix.mozilla_django_oidc }}
          PGUSER: postgres
          PGHOST: localhost
          SETUP_CONFIG_ENABLED: ${{ matrix.setup_config_enabled }}

      - name: Publish coverage report
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: ${{ matrix.setup_config_enabled == 'yes' && 'setupconfig' || 'base' }}

  publish:
    name: Publish package to PyPI
    runs-on: ubuntu-latest
    needs: tests
    environment: release
    permissions:
      id-token: write

    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Build sdist and wheel
        run: |
          pip install build --upgrade
          python -m build

      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
